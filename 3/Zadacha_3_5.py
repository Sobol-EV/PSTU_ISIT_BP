import random

masKey = []
masKey1 = []
i = 0

# Функция вывода списка учащихся
def kUch(a):
    for key in a:
        print("В {0} классе {1} учащ.".format(key, a[key]))
    return

# Функция подсчёта учеников в школе
def sUch(c1, a, mas):
    s = 0
    # Вычисление суммы учеников
    for i in range(c1):
        s += a[mas[i]]
    return s

# Фунция для генерации классов
def randClass(coun):
    d = []
    sl = {}
    i = 0
    while i < coun:
            k = 0
            # Массив с бувками для генерации названия классов
            a = ['А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ё', 'Ж', 'И', 'Й', 'К', 'Л', 'М', 'Н', 'П', 'Р', 'С', 'Т', 'У', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Э', 'Ю', 'Я']
            # Генерания цифры для названия класса
            b = random.randint(1, 11)
            # Генерация названия класса
            c = str(b) + a[random.randint(0, len(a)-1)]
            # Проверка уникальности сгенерированного названия класса
            if c in d:
                k += 1
            # Если название уникальное, то добавляется в массив уникальных названий
            if k == 0:
                i += 1
                d.append(c)
    # Генерация словаря из массива уникальных названий классов
    for i in range(coun):
        sl[d[i]] = random.randint(15, 35)
    return sl

# Генерация количества классов
c = random.randint(7, 15)
# Генерируем классы
school = randClass(c)
# Заполняю массив ключами от сгенерированного словаря
for key in school:
    masKey.append(key)
    i += 1
# Вывожу список всех классов с количеством учеников в их
print("Список классов в школе:")
kUch(school)
# Вывожу сумму учеников в классах до изменений
print("-------------------------------------")
print("Всего учеников в школе до изменений: ", sUch(c, school, masKey))
print("-------------------------------------")
# Выбираю случайный класс, в котором изменится количество учащихся
masi = masKey[random.randint(0, c-1)]
# Сгенерировал случайное число, на которое поменяется количество учащихся
r = random.randint(35, 50)
# Вывожу информацию об изменениях
print("В классе {0} было {1} учащ. ,а стало {2} учащ.".format(masi, school[masi], r))
# Изменяю количество учащихся в классе
school[masi] = r
# Вывожу количество учащихся в школе после изменения А
print("-------------------------------------")
print("Всего учеников в школе после изменения A: ", sUch(c, school, masKey))
print("-------------------------------------")
# Генерация класса с уникальным названием
while 1:
    b = 0
    masKey1 = []
    # Создаю один класс
    cl1 = randClass(1)
    # Узнаю его номер (ключ)
    for key in cl1:
        masKey1.append(key)
    # Проверяю на уникальность
    if masKey1[0] in masKey:
        b = 1
    # Если название уникально, завершаем процесс генерации
    if b == 0:
        break
# Вывожу информацию о классе который появится
print("В школе появился новый класс", masKey1[0])
# Добавляю в словарь school новый класс
school.update(cl1)
# Вывожу список классов после появления нового
print("Список классов в школе после появления нового:")
kUch(school)
# Вывожу количество учащихся в школе после изменения Б
print("-------------------------------------")
print("Всего учеников в школе после изменения Б: ", sUch(c+1, school, masKey + masKey1))
print("-------------------------------------")
# Расформировываю случайный класс
detCl = school.popitem()
# Вывожу информацию о расформированном классе
print("В школе был расформирован {0} класс".format(detCl[0]))
# Вычисляю массив названий классов без удалённого
masO = masKey+masKey1
masJ = [detCl[0]]
masJ = list(set(masO)-set(masJ))
# Вывожу количество учащихся в школе после изменения C
print("-------------------------------------")
print("Всего учеников в школе после изменения С: ", sUch(c, school, masJ))
print("-------------------------------------")
