import numpy as np


class VigenereCipher:
    """
    Шифр Виженера модуль шифрования.
    Принимает на вход 4 параметра
    1 - кодовое слово,
    2 - имя файла в котором текст
    3 -имя файла в который записать шифр
    4 - словарь(если не указать берётся по умолчанию)
    """

    # Словарь по умолчанию( Массив с набором используемых символов)
    __mas = [
        'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й',
        'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф',
        'х', 'ц', 'ч', 'ш', 'щ', 'ь', 'ы', 'ъ', 'э', 'ю', 'я',
        'А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ё', 'Ж', 'З', 'И', 'Й',
        'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф',
        'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ь', 'Ы', 'Ъ', 'Э', 'Ю', 'Я',
        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',
        'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
        'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G',
        'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R',
        'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '!', '/', '#',
        '.', ':', '&', '?', '-', '—', ',', '~', '1', '2', '3',
        '4', '5', '6', '7', '8', '9', '0', ' ', ']'
    ]

    # Функция проверки символов в строке на наличие в словаре
    @staticmethod
    def __validValue(s, m):
        for i in range(len(s)):
            if m.count(s[i]) == 0:
                print(f'В введённых данных используется недопустимый символ "{s[i]}"!')
                exit()

    # Функция шифрования строки
    # 1 - словарь 2-строка 3-кодовое слово

    def __shifr(self, m, s, k):
        n = 0
        # Создаю массив для шифрования
        mas1 = np.zeros((2, len(s)))
        # Проверяю значения шифруемой строки на присутствие в словаре(массиве)
        self.__validValue(s, m)
        # Проверяю значения кодового слова на присутствие в словаре(массиве)
        self.__validValue(k, m)
        # Заполняю первую строку порядковыми номерами элементов
        for i in range(len(s)):
            mas1[0][i] = m.index(s[i])
        #  Заполняю вторую строку порядковыми номерами элементов кодового слова
        for i in range(len(mas1[1])):
            if n >= len(k):
                n = 0
            mas1[1][i] = m.index(k[n])
            n += 1
        # Складываем порядковые номера элементов кодового слова и шифруемой строки
        for i in range(len(mas1[1])):
            mas1[1][i] += mas1[0][i]
            # По модулю
            if mas1[1][i] > (len(m) - 1):
                mas1[1][i] -= (len(m) - 1)
        s = ''
        # Записываем зашифрованные символы в строку
        for i in range(len(mas1[1])):
            s += m[int(mas1[1][i])]
        # Возвращаю строку
        return s

    # Функция считывания, записи и шифрования
    # 1- словарь, 2-кодовое слово, 3- файл с текстом 4 - шифр
    def shifrVij(self, k, r, w, m=None):
        if m is None:
            m = self.__mas
        # Открываю файл на чтение
        f = open(r)
        # Открываю файл на запись
        w1 = open(w, 'w')
        # Считываю построчно из файла
        for line in f:
            l = line
            # Удаляю знак переноса строки
            l = l[:-1] if l.find("\n") != -1 else l
            # Записываю в файл зашифрованную строку
            w1.write(str(self.__shifr(m, l, k)) + '\n')
        # Закрываю файл на запись
        w1.close()
        # Закрываю файл на чтение
        f.close()
        print(f"Успешно! Шифр записан в файл:{w}")


rf = input("Введите название файла, который зашифровать: ")
wf = input("Введите файл в который записать шифр:")
kod = input("Введите кодовое слово: ")
r = VigenereCipher()
r.shifrVij(kod, rf, wf)
